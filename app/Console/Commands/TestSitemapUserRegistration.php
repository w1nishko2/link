<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\User;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

class TestSitemapUserRegistration extends Command
{
    /**
     * The name and signature of the console command.
     */
    protected $signature = 'test:sitemap-user-registration';

    /**
     * The console command description.
     */
    protected $description = '–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ sitemap –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $this->info('=== –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è sitemap –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ===');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π sitemap
        $this->info('üìã –¢–µ–∫—É—â–∏–π sitemap:');
        $currentSitemap = file_get_contents(public_path('sitemap.xml'));
        $this->line($currentSitemap);
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $testUsername = 'testuser' . rand(1000, 9999);
        $this->info("üë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {$testUsername}");
        
        $user = User::create([
            'name' => 'Test User ' . rand(1, 100),
            'username' => $testUsername,
            'phone' => '+7' . rand(1000000000, 9999999999),
            'password' => Hash::make('password123'),
            'email_verified_at' => now(),
        ]);
        
        $this->info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å ID: {$user->id}");
        
        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ observer
        sleep(1);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π sitemap
        $this->info('üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π sitemap:');
        $updatedSitemap = file_get_contents(public_path('sitemap.xml'));
        $this->line($updatedSitemap);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–∏–ª–∏—Å—å –ª–∏ –Ω—É–∂–Ω—ã–µ URL
        $expectedUserPageUrl = "https://link/user/{$testUsername}";
        $expectedArticlesPageUrl = "https://link/user/{$testUsername}/articles";
        
        if (strpos($updatedSitemap, $expectedUserPageUrl) !== false) {
            $this->info("‚úÖ URL –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–±–∞–≤–ª–µ–Ω: {$expectedUserPageUrl}");
        } else {
            $this->error("‚ùå URL –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ï –Ω–∞–π–¥–µ–Ω: {$expectedUserPageUrl}");
        }
        
        if (strpos($updatedSitemap, $expectedArticlesPageUrl) !== false) {
            $this->info("‚úÖ URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–±–∞–≤–ª–µ–Ω: {$expectedArticlesPageUrl}");
        } else {
            $this->error("‚ùå URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ï –Ω–∞–π–¥–µ–Ω: {$expectedArticlesPageUrl}");
        }
        
        // –û—á–∏—â–∞–µ–º –∑–∞ —Å–æ–±–æ–π - —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $user->delete();
        $this->info("üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω");
        
        // –û–±–Ω–æ–≤–ª—è–µ–º sitemap –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
        sleep(1);
        $this->info("üìã Sitemap –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏");
        
        $this->info('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
    }
}
